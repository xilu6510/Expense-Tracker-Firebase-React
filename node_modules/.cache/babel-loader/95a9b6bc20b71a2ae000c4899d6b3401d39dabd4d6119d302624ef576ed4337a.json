{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { db } from \"../config/firebase-config\";\nimport { query, collection, where, onSnapshot, orderBy } from \"firebase/firestore\";\nimport { useGetUserInfo } from \"./useGetUserInfo\";\nexport const useGetTransaction = () => {\n  _s();\n  // const [transactions, setTransactions] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  const transactionCollectionRef = collection(db, \"transactions\");\n  const [transactionToals, setTransactionTotals] = useState({\n    balance: 0.0,\n    income: 0.0,\n    expense: 0.0\n  });\n  const {\n    userID\n  } = useGetUserInfo(\"auth\");\n  const getTransactions = async () => {\n    try {\n      const queryTransactions = query(transactionCollectionRef, where(\"userID\", \"==\", userID, orderBy(\"createAt\")));\n    } catch (err) {\n      console.log(err);\n    }\n    return;\n  };\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  return {\n    transactions\n  };\n};\n_s(useGetTransaction, \"S/PQOe3JxlCLdLVUc6e20+LjQAA=\", false, function () {\n  return [useGetUserInfo];\n});","map":{"version":3,"names":["useEffect","useState","db","query","collection","where","onSnapshot","orderBy","useGetUserInfo","useGetTransaction","_s","transactions","setTransactions","transactionCollectionRef","transactionToals","setTransactionTotals","balance","income","expense","userID","getTransactions","queryTransactions","err","console","log"],"sources":["/Users/lucylu/Desktop/projects/expense-tracker/src/hooks/useGetTransaction.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { db } from \"../config/firebase-config\";\nimport {\n  query,\n  collection,\n  where,\n  onSnapshot,\n  orderBy,\n} from \"firebase/firestore\";\nimport { useGetUserInfo } from \"./useGetUserInfo\";\n\nexport const useGetTransaction = () => {\n  // const [transactions, setTransactions] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n\n  const transactionCollectionRef = collection(db, \"transactions\");\n  const [transactionToals, setTransactionTotals] = useState({\n    balance: 0.0,\n    income: 0.0,\n    expense: 0.0,\n  });\n  const { userID } = useGetUserInfo(\"auth\");\n\n  const getTransactions = async () => {\n    try {\n      const queryTransactions = query(\n        transactionCollectionRef,\n        where(\"userID\", \"==\", userID, orderBy(\"createAt\"))\n      );\n    } catch (err) {\n      console.log(err);\n    }\n\n    return;\n  };\n\n  useEffect(() => {\n    getTransactions();\n  }, []);\n\n  return { transactions };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,2BAA2B;AAC9C,SACEC,KAAK,EACLC,UAAU,EACVC,KAAK,EACLC,UAAU,EACVC,OAAO,QACF,oBAAoB;AAC3B,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMY,wBAAwB,GAAGT,UAAU,CAACF,EAAE,EAAE,cAAc,CAAC;EAC/D,MAAM,CAACY,gBAAgB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC;IACxDe,OAAO,EAAE,GAAG;IACZC,MAAM,EAAE,GAAG;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM;IAAEC;EAAO,CAAC,GAAGX,cAAc,CAAC,MAAM,CAAC;EAEzC,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,iBAAiB,GAAGlB,KAAK,CAC7BU,wBAAwB,EACxBR,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEc,MAAM,EAAEZ,OAAO,CAAC,UAAU,CAAC,CACnD,CAAC;IACH,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;IAEA;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdoB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAET;EAAa,CAAC;AACzB,CAAC;AAACD,EAAA,CA9BWD,iBAAiB;EAAA,QAUTD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}