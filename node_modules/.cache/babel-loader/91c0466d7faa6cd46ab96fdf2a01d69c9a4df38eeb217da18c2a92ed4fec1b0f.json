{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { db } from \"../config/firebase-config\";\nimport { query, collection, where, onSnapshot, orderBy } from \"firebase/firestore\";\nimport { useGetUserInfo } from \"./useGetUserInfo\";\nexport const useGetTransaction = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  // const [transactionToals, setTransactionTotals] = useState({\n  //   balance: 0.0,\n  //   income: 0.0,\n  //   expense: 0.0,\n  // });\n  const {\n    userID\n  } = useGetUserInfo(\"auth\");\n  const getTransactions = async () => {\n    const q = query(collection(db, \"transactions\"), where(\"userID\", \"==\", userID), orderBy(\"createAt\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      let allTransactins = [];\n\n      // let totalIncome = 0;\n      // let totalExpense = 0;\n\n      querySnapshot.forEach(doc => {\n        allTransactins.push(doc.data());\n\n        // if (doc.data().transactionType === \"expense\") {\n        //   totalExpense += Number(doc.data().transactionAmount);\n        // } else {\n        //   totalIncome += Number(doc.data().transactionAmount);\n        // }\n      });\n      console.log(allTransactins.length);\n      setTransactions(allTransactins);\n      console.log(allTransactins.length);\n      console.log(\"tansaction\" + transactions.length);\n\n      // let balance = totalIncome - totalExpense;\n\n      // setTransactionTotals({\n      //   balance,\n      //   income: totalIncome,\n      //   expense: totalExpense,\n      // });\n    });\n    return () => unsubscribe();\n  };\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  return {\n    transactions\n  };\n};\n_s(useGetTransaction, \"XqWPuDUR4CVjmhEfFWhfMVd4UZc=\", false, function () {\n  return [useGetUserInfo];\n});","map":{"version":3,"names":["useEffect","useState","db","query","collection","where","onSnapshot","orderBy","useGetUserInfo","useGetTransaction","_s","transactions","setTransactions","userID","getTransactions","q","unsubscribe","querySnapshot","allTransactins","forEach","doc","push","data","console","log","length"],"sources":["/Users/lucylu/Desktop/projects/expense-tracker/src/hooks/useGetTransaction.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { db } from \"../config/firebase-config\";\nimport {\n  query,\n  collection,\n  where,\n  onSnapshot,\n  orderBy,\n} from \"firebase/firestore\";\nimport { useGetUserInfo } from \"./useGetUserInfo\";\n\nexport const useGetTransaction = () => {\n  const [transactions, setTransactions] = useState([]);\n  // const [transactionToals, setTransactionTotals] = useState({\n  //   balance: 0.0,\n  //   income: 0.0,\n  //   expense: 0.0,\n  // });\n  const { userID } = useGetUserInfo(\"auth\");\n\n  const getTransactions = async () => {\n    const q = query(\n      collection(db, \"transactions\"),\n      where(\"userID\", \"==\", userID),\n      orderBy(\"createAt\")\n    );\n\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      let allTransactins = [];\n\n      // let totalIncome = 0;\n      // let totalExpense = 0;\n\n      querySnapshot.forEach((doc) => {\n        allTransactins.push(doc.data());\n\n        // if (doc.data().transactionType === \"expense\") {\n        //   totalExpense += Number(doc.data().transactionAmount);\n        // } else {\n        //   totalIncome += Number(doc.data().transactionAmount);\n        // }\n      });\n      console.log(allTransactins.length);\n      setTransactions(allTransactins);\n      console.log(allTransactins.length);\n      console.log(\"tansaction\" + transactions.length);\n\n      // let balance = totalIncome - totalExpense;\n\n      // setTransactionTotals({\n      //   balance,\n      //   income: totalIncome,\n      //   expense: totalExpense,\n      // });\n    });\n\n    return () => unsubscribe();\n  };\n\n  useEffect(() => {\n    getTransactions();\n  }, []);\n\n  return { transactions };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,2BAA2B;AAC9C,SACEC,KAAK,EACLC,UAAU,EACVC,KAAK,EACLC,UAAU,EACVC,OAAO,QACF,oBAAoB;AAC3B,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA;EACA;EACA;EACA;EACA,MAAM;IAAEY;EAAO,CAAC,GAAGL,cAAc,CAAC,MAAM,CAAC;EAEzC,MAAMM,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,CAAC,GAAGZ,KAAK,CACbC,UAAU,CAACF,EAAE,EAAE,cAAc,CAAC,EAC9BG,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEQ,MAAM,CAAC,EAC7BN,OAAO,CAAC,UAAU,CACpB,CAAC;IAED,MAAMS,WAAW,GAAGV,UAAU,CAACS,CAAC,EAAGE,aAAa,IAAK;MACnD,IAAIC,cAAc,GAAG,EAAE;;MAEvB;MACA;;MAEAD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;QAC7BF,cAAc,CAACG,IAAI,CAACD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;;QAE/B;QACA;QACA;QACA;QACA;MACF,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACN,cAAc,CAACO,MAAM,CAAC;MAClCb,eAAe,CAACM,cAAc,CAAC;MAC/BK,OAAO,CAACC,GAAG,CAACN,cAAc,CAACO,MAAM,CAAC;MAClCF,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGb,YAAY,CAACc,MAAM,CAAC;;MAE/C;;MAEA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC;IAEF,OAAO,MAAMT,WAAW,CAAC,CAAC;EAC5B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdc,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEH;EAAa,CAAC;AACzB,CAAC;AAACD,EAAA,CArDWD,iBAAiB;EAAA,QAOTD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}