{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { db } from \"../config/firebase-config\";\nimport { query, collection, where, onSnapshot, orderBy } from \"firebase/firestore\";\nimport { useGetUserInfo } from \"./useGetUserInfo\";\nexport const useGetTransaction = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [transactionToals, setTransactionTotals] = useState({\n    balance: 0.0,\n    income: 0.0,\n    expense: 0.0\n  });\n  const {\n    userID\n  } = useGetUserInfo(\"auth\");\n  const getTransactions = async () => {\n    const q = query(collection(db, \"transactions\"), where(\"userID\", \"==\", userID), orderBy(\"createAt\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      let allTransactins = [];\n      let totalIncome = 0;\n      let totalExpense = 0;\n      querySnapshot.forEach(doc => {\n        allTransactins.push(doc.data());\n        if (doc.data().transactionType === \"expense\") {\n          totalExpense += Number(doc.data().transactionAmount);\n        } else {\n          totalIncome += Number(doc.data().transactionAmount);\n        }\n      });\n      setTransactions(allTransactins);\n      console.log(transactions.length);\n      let balance = totalIncome - totalExpense;\n      setTransactionTotals({\n        balance,\n        income: totalIncome,\n        expense: totalExpense\n      });\n    });\n    return () => unsubscribe();\n  };\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  return {\n    transactions,\n    transactionToals\n  };\n};\n_s(useGetTransaction, \"S/PQOe3JxlCLdLVUc6e20+LjQAA=\", false, function () {\n  return [useGetUserInfo];\n});","map":{"version":3,"names":["useEffect","useState","db","query","collection","where","onSnapshot","orderBy","useGetUserInfo","useGetTransaction","_s","transactions","setTransactions","transactionToals","setTransactionTotals","balance","income","expense","userID","getTransactions","q","unsubscribe","querySnapshot","allTransactins","totalIncome","totalExpense","forEach","doc","push","data","transactionType","Number","transactionAmount","console","log","length"],"sources":["/Users/lucylu/Desktop/projects/expense-tracker/src/hooks/useGetTransaction.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { db } from \"../config/firebase-config\";\nimport {\n  query,\n  collection,\n  where,\n  onSnapshot,\n  orderBy,\n} from \"firebase/firestore\";\nimport { useGetUserInfo } from \"./useGetUserInfo\";\n\nexport const useGetTransaction = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [transactionToals, setTransactionTotals] = useState({\n    balance: 0.0,\n    income: 0.0,\n    expense: 0.0,\n  });\n  const { userID } = useGetUserInfo(\"auth\");\n\n  const getTransactions = async () => {\n    const q = query(\n      collection(db, \"transactions\"),\n      where(\"userID\", \"==\", userID),\n      orderBy(\"createAt\")\n    );\n\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      let allTransactins = [];\n\n      let totalIncome = 0;\n      let totalExpense = 0;\n\n      querySnapshot.forEach((doc) => {\n        allTransactins.push(doc.data());\n\n        if (doc.data().transactionType === \"expense\") {\n          totalExpense += Number(doc.data().transactionAmount);\n        } else {\n          totalIncome += Number(doc.data().transactionAmount);\n        }\n      });\n\n      setTransactions(allTransactins);\n      console.log(transactions.length);\n\n      let balance = totalIncome - totalExpense;\n\n      setTransactionTotals({\n        balance,\n        income: totalIncome,\n        expense: totalExpense,\n      });\n    });\n\n    return () => unsubscribe();\n  };\n\n  useEffect(() => {\n    getTransactions();\n  }, []);\n\n  return { transactions, transactionToals };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,2BAA2B;AAC9C,SACEC,KAAK,EACLC,UAAU,EACVC,KAAK,EACLC,UAAU,EACVC,OAAO,QACF,oBAAoB;AAC3B,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,gBAAgB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC;IACxDc,OAAO,EAAE,GAAG;IACZC,MAAM,EAAE,GAAG;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM;IAAEC;EAAO,CAAC,GAAGV,cAAc,CAAC,MAAM,CAAC;EAEzC,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,CAAC,GAAGjB,KAAK,CACbC,UAAU,CAACF,EAAE,EAAE,cAAc,CAAC,EAC9BG,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEa,MAAM,CAAC,EAC7BX,OAAO,CAAC,UAAU,CACpB,CAAC;IAED,MAAMc,WAAW,GAAGf,UAAU,CAACc,CAAC,EAAGE,aAAa,IAAK;MACnD,IAAIC,cAAc,GAAG,EAAE;MAEvB,IAAIC,WAAW,GAAG,CAAC;MACnB,IAAIC,YAAY,GAAG,CAAC;MAEpBH,aAAa,CAACI,OAAO,CAAEC,GAAG,IAAK;QAC7BJ,cAAc,CAACK,IAAI,CAACD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;QAE/B,IAAIF,GAAG,CAACE,IAAI,CAAC,CAAC,CAACC,eAAe,KAAK,SAAS,EAAE;UAC5CL,YAAY,IAAIM,MAAM,CAACJ,GAAG,CAACE,IAAI,CAAC,CAAC,CAACG,iBAAiB,CAAC;QACtD,CAAC,MAAM;UACLR,WAAW,IAAIO,MAAM,CAACJ,GAAG,CAACE,IAAI,CAAC,CAAC,CAACG,iBAAiB,CAAC;QACrD;MACF,CAAC,CAAC;MAEFpB,eAAe,CAACW,cAAc,CAAC;MAC/BU,OAAO,CAACC,GAAG,CAACvB,YAAY,CAACwB,MAAM,CAAC;MAEhC,IAAIpB,OAAO,GAAGS,WAAW,GAAGC,YAAY;MAExCX,oBAAoB,CAAC;QACnBC,OAAO;QACPC,MAAM,EAAEQ,WAAW;QACnBP,OAAO,EAAEQ;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,MAAMJ,WAAW,CAAC,CAAC;EAC5B,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACdmB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAER,YAAY;IAAEE;EAAiB,CAAC;AAC3C,CAAC;AAACH,EAAA,CApDWD,iBAAiB;EAAA,QAOTD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}