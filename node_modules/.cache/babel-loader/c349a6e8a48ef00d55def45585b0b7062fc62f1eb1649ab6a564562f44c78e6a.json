{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { db } from \"../config/firebase-config\";\nimport { query, collection, where, onSnapshot } from \"firebase/firestore\";\nimport { useGetUserInfo } from \"./useGetUserInfo\";\nexport const useGetTransaction = () => {\n  _s();\n  const [transactions, setTransactions] = useState();\n  const {\n    userID\n  } = useGetUserInfo(\"auth\");\n  const getTransactions = async () => {\n    const q = query(collection(db, \"transactions\"), where(\"userID\", \"==\", userID));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const allTransactins = [];\n      querySnapshot.forEach(doc => {\n        allTransactins.push(doc.data());\n      });\n      setTransactions(allTransactins);\n    });\n    return () => unsubscribe();\n  };\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  return {\n    transactions\n  };\n};\n_s(useGetTransaction, \"Yr0b2k8ak13vndZ0AV2CF0lamqw=\", false, function () {\n  return [useGetUserInfo];\n});","map":{"version":3,"names":["useEffect","useState","db","query","collection","where","onSnapshot","useGetUserInfo","useGetTransaction","_s","transactions","setTransactions","userID","getTransactions","q","unsubscribe","querySnapshot","allTransactins","forEach","doc","push","data"],"sources":["/Users/lucylu/Desktop/projects/expense-tracker/src/hooks/useGetTransaction.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { db } from \"../config/firebase-config\";\nimport { query, collection, where, onSnapshot } from \"firebase/firestore\";\nimport { useGetUserInfo } from \"./useGetUserInfo\";\n\nexport const useGetTransaction = () => {\n  const [transactions, setTransactions] = useState();\n  const { userID } = useGetUserInfo(\"auth\");\n\n  const getTransactions = async () => {\n    const q = query(\n      collection(db, \"transactions\"),\n      where(\"userID\", \"==\", userID)\n    );\n\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const allTransactins = [];\n      querySnapshot.forEach((doc) => {\n        allTransactins.push(doc.data());\n      });\n\n      setTransactions(allTransactins);\n    });\n    return () => unsubscribe();\n  };\n\n  useEffect(() => {\n    getTransactions();\n  }, []);\n\n  return { transactions };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,2BAA2B;AAC9C,SAASC,KAAK,EAAEC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,oBAAoB;AACzE,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAClD,MAAM;IAAEW;EAAO,CAAC,GAAGL,cAAc,CAAC,MAAM,CAAC;EAEzC,MAAMM,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,CAAC,GAAGX,KAAK,CACbC,UAAU,CAACF,EAAE,EAAE,cAAc,CAAC,EAC9BG,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEO,MAAM,CAC9B,CAAC;IAED,MAAMG,WAAW,GAAGT,UAAU,CAACQ,CAAC,EAAGE,aAAa,IAAK;MACnD,MAAMC,cAAc,GAAG,EAAE;MACzBD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;QAC7BF,cAAc,CAACG,IAAI,CAACD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC;MAEFV,eAAe,CAACM,cAAc,CAAC;IACjC,CAAC,CAAC;IACF,OAAO,MAAMF,WAAW,CAAC,CAAC;EAC5B,CAAC;EAEDf,SAAS,CAAC,MAAM;IACda,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEH;EAAa,CAAC;AACzB,CAAC;AAACD,EAAA,CA1BWD,iBAAiB;EAAA,QAETD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}